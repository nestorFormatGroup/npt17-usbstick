%!PS-Adobe-3.0
%%Creator: groff version 1.18.1
%%CreationDate: Wed Nov  5 16:51:04 2003
%%DocumentNeededResources: font Helvetica
%%+ font Times-Roman
%%+ font Courier
%%+ font Times-BoldItalic
%%+ font Symbol
%%+ font Helvetica-Bold
%%DocumentSuppliedResources: file smile.epsf
%%+ procset grops 1.18 1
%%Pages: 25
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.18 1
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/Fk{
setcmykcolor fill
}bind def
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/Ck/setcmykcolor load def
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%IncludeResource: font Helvetica
%%IncludeResource: font Times-Roman
%%IncludeResource: font Courier
%%IncludeResource: font Times-BoldItalic
%%IncludeResource: font Symbol
%%IncludeResource: font Helvetica-Bold
grops begin/DEFS 57 dict def DEFS begin/u{.001 mul}bind def
/FillSolid {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    gsave
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    setrgbcolor
    fill
    grestore
} bind def
/FillGradX {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    /blue2 exch def
    /green2 exch def
    /red2 exch def
    /blue1 exch def
    /green1 exch def
    /red1 exch def
    /step 2 def
    /nrsteps x2 x1 sub step div def
    /incrred red2 red1 sub nrsteps div def
    /incrgreen green2 green1 sub nrsteps div def
    /incrblue blue2 blue1 sub nrsteps div def
    gsave 
    x1 step x2 {
	/x exch def
	x y1 moveto
	x y2 lineto
	x step sub y2 lineto
	x step sub y1 lineto
	closepath
	red1 green1 blue1 setrgbcolor fill
	/red1 red1 incrred add def
	/green1 green1 incrgreen add def
	/blue1 blue1 incrblue add def
    } for
    grestore
} bind def
/FillGradY {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    /blue2 exch def
    /green2 exch def
    /red2 exch def
    /blue1 exch def
    /green1 exch def
    /red1 exch def
    /step 2 def
    /nrsteps y2 y1 sub step div def
    /incrred red2 red1 sub nrsteps div def
    /incrgreen green2 green1 sub nrsteps div def
    /incrblue blue2 blue1 sub nrsteps div def
    gsave 
    y1 step y2 {
	/y exch def
	x1 y moveto
	x2 y lineto
	x2 y step sub lineto
	x1 y step sub lineto
	closepath
	red1 green1 blue1 setrgbcolor fill
	/red1 red1 incrred add def
	/green1 green1 incrgreen add def
	/blue1 blue1 incrblue add def
    } for
    grestore
} bind def
/setupgradfill {	% sr sg sb er eg eb steps angle
    rotate
    /numsteps exch def
    % String to hold synthetic data
    /gradstr numsteps 3 mul string def 
    3 index sub numsteps div /ib exch def
    3 index sub numsteps div /ig exch def
    3 index sub numsteps div /ir exch def
    /sb exch def
    /sg exch def 
    /sr exch def
    
    %(SR SG SB: ) print sr == sb == sg ==
    %(IR IG IB: ) print ir == ib == ig ==

    % Create a synthetic data string
    0 1 numsteps 1 sub {	% loop
	3 mul		        % index
	gradstr 1 index sr 255 mul round cvi put
	gradstr 1 index 1 add sg 255 mul round cvi put
	gradstr 1 index 2 add sb 255 mul round cvi put
	pop
	/sr sr ir add def
	/sg sg ig add def
	/sb sb ib add def
    } for
} bind def

/convbboxtoxywh {	% llx lly urx ury
    2 index sub exch 3 index sub exch
} bind def

/gradmatrix matrix def

/gradfill {
% startred startgreen startblue endred endgreen endblue steps angle
    save /mysave exch def
	setupgradfill
	pathbbox clip convbboxtoxywh	% x y w h
	0 0 3 -1 roll 6 -2 roll		% w 0 0 h x y
	gradmatrix astore concat
	numsteps 1 8 [numsteps 0 0 1 0 0]
	{
	    gradstr
	}
	false 3 colorimage
    mysave restore
} bind def

% Fill the whole page
/FillGradAngle {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    gsave 
    x1 y1 moveto
    x1 y2 lineto
    x2 y2 lineto
    x2 y1 lineto
    closepath
    gradfill
    grestore
} bind def
%%%%HASCONTENTS
end/RES 72 def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde
/Scaron/Zcaron/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar
/percent/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine
/colon/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L
/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/circumflex/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t
/u/v/w/x/y/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase
/guillemotleft/guillemotright/bullet/florin/fraction/perthousand/dagger
/daggerdbl/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave
/hungarumlaut/dotaccent/breve/caron/ring/ogonek/quotedblleft
/quotedblright/oe/lslash/quotedblbase/OE/Lslash/.notdef/exclamdown/cent
/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guilsinglleft/logicalnot/minus/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guilsinglright/onequarter/onehalf
/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde
/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae
/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex
/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Helvetica-Bold@0 ENC0/Helvetica-Bold RE/Times-BoldItalic@0 ENC0
/Times-BoldItalic RE/Courier@0 ENC0/Courier RE/Times-Roman@0 ENC0
/Times-Roman RE/Helvetica@0 ENC0/Helvetica RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF
<546865206d616b696e67206f6620746869732064656d6f>271.663 90.4 Q 0 0 0 Cr
/F1 18/Helvetica@0 SF<64656d6f>130.941 169.96 Q<2e726f66>-.72 E 0 0 1 Cr
<70726573656e742e746d6163>222.075 169.96 Q 1.5 LW 0 0 0 Cr 166.095 220
166.095 184 DL 166.095 220 MT -2.88 -7.2 RL 5.76 0 RL CL 0 Fg 166.095
220 MT -2.88 -7.2 RL 5.76 0 RL CL 0 0 0 Cr ST 209.295 256 MT 0 -36 RL
-86.4 0 RL 0 36 RL CL ST -.18<6772>148.176 241.96 S<6f6666>.18 E 209.295
220 230.895 184 DL 209.295 220 MT 1.224 -7.632 RL 4.968 2.952 RL CL 0 Fg
209.295 220 MT 1.224 -7.632 RL 4.968 2.952 RL CL 0 0 0 Cr ST 166.095 292
166.095 256 DL 166.095 292 MT -2.88 -7.2 RL 5.76 0 RL CL 0 Fg 166.095
292 MT -2.88 -7.2 RL 5.76 0 RL CL 0 0 0 Cr ST 209.295 328 MT 0 -36 RL
-86.4 0 RL 0 36 RL CL ST 0 0 1 Cr<70726573656e747073>126.576 313.96 Q 0
0 0 Cr 166.095 364 166.095 328 DL 166.095 364 MT -2.88 -7.2 RL 5.76 0 RL
CL 0 Fg 166.095 364 MT -2.88 -7.2 RL 5.76 0 RL CL 0 0 0 Cr ST 209.295
400 MT 0 -36 RL -86.4 0 RL 0 36 RL CL ST<707332706466>139.077 385.96 Q
166.095 436 166.095 400 DL 166.095 436 MT -2.88 -7.2 RL 5.76 0 RL CL 0
Fg 166.095 436 MT -2.88 -7.2 RL 5.76 0 RL CL 0 0 0 Cr ST 209.295 472 MT
0 -36 RL -86.4 0 RL 0 36 RL CL ST<6163726f72656164>130.581 457.96 Q -.18
<6772>310.095 241.96 S<6f6666202d70202d65202d74202d6d6d202d6d>.18 E 0 0
1 Cr<70726573656e74>A 0 0 0 Cr<64656d6f>5.004 E<2e726f66203e2064656d6f>
-.72 E<2e707073>-.72 E 0 0 1 Cr<70726573656e747073>310.095 313.96 Q 0 0
0 Cr<2d6c203c2064656d6f>5.004 E<2e707073203e2064656d6f>-.72 E<2e7073>
-.72 E<7073327064662064656d6f>310.095 385.96 Q<2e7073>-.72 E
<6163726f726561642064656d6f>310.095 457.96 Q<2e706466>-.72 E 108 529.28
EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<31>714.44 541.28 Q 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF<48656164657273>364.873 90.4 Q 0 0 0
Cr/F1 18/Helvetica@0 SF -2.52<596f>108 132 S 5.004<7563>2.52 G
<616e206d616b>-5.004 E 5.004<6568>-.36 G<6561646572732062>-5.004 E 5.004
<7964>-.36 G<658c6e696e672061206d6163726f20484541444552>-5.004 E/F2 16
/Courier@0 SF 3.2<2e646520484541444552>133 154 R 3.2<2e737020302e3269>
133 170 R 3.2<2e5053504943202d4c20736d696c652e65707320302e3569>133 186 R
3.2<2e7370202d302e3169>133 202 R
<5c6c275c5c6e5b2e6c5d75275c68272d5c5c6e5b2e6c5d7527>133 218 Q<2e6272>133
234 Q 3.2<2e6d6b205231>133 250 R 3.2<2e7370202d302e3469>133 266 R 3.2<5c
6827302e3669275c732b3844656d6f6e7374726174696f6e206f662050726573656e7461
74696f6e7320776974682047726f66665c>133 282 R 3.2
<616e64204163726f726561645c732d38>145.8 298 R 3.2
<2e7370207c5c5c6e28523175>133 314 R<2e6272>133 330 Q<2e2e>133 346 Q 108
529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<32>714.44 541.28 Q 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF -.78<466f>370.32 90.4 S<6f74657273>
.78 E 0 0 0 Cr/F1 18/Helvetica@0 SF -2.52<596f>108 132 S 5.004<7563>2.52
G<616e206d616b>-5.004 E 5.004<6566>-.36 G<6f6f746572732062>-5.544 E
5.004<7964>-.36 G<658c6e696e672061206d6163726f20464f4f>-5.004 E<544552>
-.72 E/F2 16/Courier@0 SF 3.2<2e646520464f4f544552>133 154 R
<5c6c275c5c6e5b2e6c5d75275c68272d5c5c6e5b2e6c5d7527>133 170 Q<2e6272>133
186 Q 3.2<2e746c202727272527>133 202 R<2e2e>133 218 Q 108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<33>714.44 541.28 Q 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF<5469746c6573>382.943 90.4 Q 0 0 0
Cr/F1 18/Helvetica@0 SF<546865205449544c45206d6163726f206d616b>108 132 Q
<657320612063656e74657265642c20646172>-.36 E 5.004<6b62>.27 G
<6c7565207469746c6520696e2061206269672066>-5.364 E<6f6e742e>-.54 E/F2 16
/Courier@0 SF 3.2<2e5449544c4520225469746c657322>133 154 R 0 0 0.4 Cr/F3
22/Helvetica@0 SF<5375627469746c6573>144 188.4 Q 0 0 0 Cr F1 1.159
<546865205355425449544c45206d6163726f206d616b>108 222.8 R 1.159
<6573206120696e64656e7465642c20646172>-.36 F 6.163<6b62>.27 G 1.159
<6c7565207375627469746c6520696e2061206269672066>-6.523 F 1.158
<6f6e742062>-.54 F<7574>-.36 E<736d616c6c6572207468616e2061207469746c65>
108 242.8 Q<2e>-.27 E F2 3.2<2e5355425449544c4520225375627469746c657322>
133 264.8 R 0 0 0.4 Cr F3<5469746c65636f6c6f72>144 299.2 Q 0 0 0 Cr F1
-2.52<596f>108 333.6 S 12.525<7563>2.52 G 7.521<616e206368616e6765207468
6520636f6c6f72206f6620746865207469746c657320616e64207375627469746c657320
7769746820746865206d6163726f>-12.525 F<5449544c45434f4c4f522e>108 353.6
Q F2 3.2<2e5449544c45434f4c4f5220726564>133 375.6 R 108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<34>714.44 541.28 Q 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF -1.04<5061>367.551 90.4 S
<7573696e67>1.04 E 0 0 0 Cr/F1 18/Helvetica@0 SF -2.52<596f>108 132 S
7.174<7563>2.52 G 2.17<616e2073686f>-7.174 F 7.174<77616c>-.27 G 2.169<
69737420616e642070617573652061667465722065616368206974656d20776974682074
686520757365206f66207468652050>-7.174 F -.9<4155>-2.16 G<5345>.9 E
<6d6163726f>108 152 Q<2e>-.72 E/F2 16/Helvetica@0 SF<83>138.4 178 Q F1
<6c697374206974656d2031>9 E 234.018 178 EBEGIN
%%%%PAUSE
EEND/F0 16/Helvetica@0 SF<83>138.4 204 Q/F1 18/Helvetica@0 SF
<6c697374206974656d2032>9 E 234.018 204 EBEGIN
%%%%PAUSE
EEND/F0 16/Helvetica@0 SF<83>138.4 230 Q/F1 18/Helvetica@0 SF
<6c697374206974656d2033>9 E
<546865206c69737420697320637265617465642077697468>108 256 Q/F2 16
/Courier@0 SF<2e424c>133 278 Q<2e4c49>133 294 Q 3.2
<6c697374206974656d2031>133 310 R<2e5041555345>133 326 Q<2e4c49>133 342
Q 3.2<6c697374206974656d2032>133 358 R<2e5041555345>133 374 Q<2e4c49>133
390 Q 3.2<6c697374206974656d2033>133 406 R 3.2<2e4c452031>133 422 R 108
529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<35>714.44 541.28 Q 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF -1.04<5061>327.095 90.4 S
<7573696e672028636f6e742e29>1.04 E 0 0 0 Cr/F1 18/Helvetica@0 SF -2.52
<596f>108 132 S 5.004<7563>2.52 G<616e20616c736f20757365207468652050>
-5.004 E -.9<4155>-2.16 G<5345206d6163726f20696e20612070696374757265>.9
E<2e>-.27 E 499.338 132 EBEGIN
%%%%PAUSE
EEND 93.6 50.4 154.8 193.2 DE 1.5 LW ST/F0 18/Helvetica@0 SF
<646f63756d656e74>115.281 197.16 Q 108 168 EBEGIN
%%%%PAUSE
EEND 1.5 LW 237.6 193.2 201.6 193.2 DL 237.6 193.2 MT -7.2 2.88 RL 0
-5.76 RL CL 0 Fg 237.6 193.2 MT -7.2 2.88 RL 0 -5.76 RL CL 0 0 0 Cr ST
331.2 218.4 MT 0 -50.4 RL -93.6 0 RL 0 50.4 RL CL ST/F0 18/Helvetica@0
SF<504943>269.397 197.16 Q 108 168 EBEGIN
%%%%PAUSE
EEND 1.5 LW 367.2 193.2 331.2 193.2 DL 367.2 193.2 MT -7.2 2.88 RL 0
-5.76 RL CL 0 Fg 367.2 193.2 MT -7.2 2.88 RL 0 -5.76 RL CL 0 0 0 Cr ST
370.8 218.4 367.2 218.4 DL 377.712 218.4 374.112 218.4 DL 384.624 218.4
381.024 218.4 DL 391.536 218.4 387.936 218.4 DL 398.52 218.4 394.92
218.4 DL 405.432 218.4 401.832 218.4 DL 412.344 218.4 408.744 218.4 DL
419.256 218.4 415.656 218.4 DL 426.168 218.4 422.568 218.4 DL 433.08
218.4 429.48 218.4 DL 440.064 218.4 436.464 218.4 DL 446.976 218.4
443.376 218.4 DL 453.888 218.4 450.288 218.4 DL 460.8 218.4 457.2 218.4
DL 460.8 214.8 460.8 218.4 DL 460.8 208.104 460.8 211.704 DL 460.8
201.408 460.8 205.008 DL 460.8 194.712 460.8 198.312 DL 460.8 188.088
460.8 191.688 DL 460.8 181.392 460.8 184.992 DL 460.8 174.696 460.8
178.296 DL 460.8 168 460.8 171.6 DL 457.2 168 460.8 168 DL 450.288 168
453.888 168 DL 443.376 168 446.976 168 DL 436.464 168 440.064 168 DL
429.48 168 433.08 168 DL 422.568 168 426.168 168 DL 415.656 168 419.256
168 DL 408.744 168 412.344 168 DL 401.832 168 405.432 168 DL 394.92 168
398.52 168 DL 387.936 168 391.536 168 DL 381.024 168 384.624 168 DL
374.112 168 377.712 168 DL 367.2 168 370.8 168 DL 367.2 171.6 367.2 168
DL 367.2 178.296 367.2 174.696 DL 367.2 184.992 367.2 181.392 DL 367.2
191.688 367.2 188.088 DL 367.2 198.312 367.2 194.712 DL 367.2 205.008
367.2 201.408 DL 367.2 211.704 367.2 208.104 DL 367.2 218.4 367.2 214.8
DL/F0 18/Helvetica@0 SF<54424c2f45514e>375.489 187.16 Q
<286f7074696f6e616c29>376.488 207.16 Q 108 168 EBEGIN
%%%%PAUSE
EEND 1.5 LW 496.8 193.2 460.8 193.2 DL 496.8 193.2 MT -7.2 2.88 RL 0
-5.76 RL CL 0 Fg 496.8 193.2 MT -7.2 2.88 RL 0 -5.76 RL CL 0 0 0 Cr ST
590.4 218.4 MT 0 -50.4 RL -93.6 0 RL 0 50.4 RL CL ST/F0 18/Helvetica@0
SF<4752>512.28 197.16 Q<4f4646>-.36 E 108 168 EBEGIN
%%%%PAUSE
EEND 1.5 LW 626.4 193.2 590.4 193.2 DL 626.4 193.2 MT -7.2 2.88 RL 0
-5.76 RL CL 0 Fg 626.4 193.2 MT -7.2 2.88 RL 0 -5.76 RL CL 0 0 0 Cr ST
93.6 50.4 673.2 193.2 DE ST/F0 18/Helvetica@0 SF<74797065736574746572>
633.681 197.16 Q<546865207069637475726520697320637265617465642077697468>
108 260.4 Q/F1 16/Courier@0 SF 3.2<2e4453204342>133 276.4 R<2e5053>133
292.4 Q<6c696e65746869636b3d312e35>133 308.4 Q
<6172726f777769643d302e3038>133 324.4 Q<626f787769643d312e3369>133 340.4
Q<626f7868743d302e3769>133 356.4 Q<656c6c697073657769643d312e3369>133
372.4 Q<656c6c6970736568743d302e3769>133 388.4 Q 3.2
<656c6c697073652022646f63756d656e7422>133 404.4 R<2e5041555345>133 420.4
Q<6172726f77>133 436.4 Q 3.2<626f78202250494322>133 452.4 R
<2e5041555345>133 468.4 Q<6172726f77>133 484.4 Q 3.2
<626f78202254424c2f45514e222022286f7074696f6e616c2922205c>133 500.4 R
<646173686564>510.6 276.4 Q<2e5041555345>459.4 292.4 Q<6172726f77>459.4
308.4 Q 3.2<626f78202247524f464622>459.4 324.4 R<2e5041555345>459.4
340.4 Q<6172726f77>459.4 356.4 Q 3.2
<656c6c6970736520227479706573657474657222>459.4 372.4 R<2e5045>459.4
388.4 Q<2e4445>459.4 404.4 Q 108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<36>714.44 541.28 Q 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF -1.04<5061>327.095 90.4 S
<7573696e672028636f6e742e29>1.04 E 0 0 0 Cr/F1 18/Helvetica@0 SF -2.52
<596f>108 132 S 5.004<7563>2.52 G<616e20616c736f20757365207468652050>
-5.004 E -.9<4155>-2.16 G
<5345206d6163726f20696e2061206571756174696f6e2e>.9 E 514.638 132 EBEGIN
%%%%PAUSE
EEND/F0 18/Times-BoldItalic@0 SF<47>153.522 171.667 Q/F1 18
/Times-Roman@0 SF<28>.612 E F0<7a>1.674 E F1<29>.522 E/F2 18/Symbol SF
<3d>4.842 E F0<65>5.85 E/F3 12.6/Times-Roman@0 SF<6c6e>.072 -7.56 M/F4
12.6/Times-BoldItalic@0 SF<47>3.893 E F3<28>.428 E F4<7a>1.172 E F3<29>
.365 E F2<3d>5.742 7.56 M F1 -.27<6578>5.04 G<70>.27 E F2<e6>3.06 -9.9 M
<e8>-6.912 21.834 M F4<6b>1.208 2.992 M/F5 12.6/Symbol SF<b3>.051 E F3
<31>-1.399 E/F6 23/Symbol SF<53>-16.41 -11.867 M F0<53>8.878 -15.659 M
F4<6b>1.28 3.6 M F0<7a>2.99 -3.6 M F4<6b>1.442 -7.56 M F0<6b>-21.575
32.76 M .72 LW 373.462 166.987 335.96 166.987 DL F2<f6>375.622 161.767 Q
<f8>-6.912 21.834 M<3d>5.13 -11.934 M F4<6b>5.96 14.926 M F5<b3>.051 E
F3<31>-1.399 E F6<50>-18.664 -11.867 M F0<65>4.87 -3.059 M F4<53>.677
-7.56 M/F7 8.82/Times-BoldItalic@0 SF<6b>.896 2.52 M F4<7a>2.093 -2.52 M
F7<6b>1.009 -4.662 M F3<2f>1.034 4.662 M F4<6b>.92 E 153 227.953 EBEGIN
%%%%PAUSE
EEND/F0 18/Symbol SF<3d>193.158 227.953 Q<e6>5.04 -9.9 M<e8>-6.912
21.834 M/F1 18/Times-Roman@0 SF<31>-1.71 -11.934 M F0<2b>3.78 E/F2 18
/Times-BoldItalic@0 SF<53>4.824 E/F3 12.6/Times-Roman@0 SF<31>-1.039 3.6
M F2<7a>2.574 -3.6 M F0<2b>4.302 E F2<53>6.984 -12.6 M F3<32>-.018 -7.56
M<31>-7.321 11.7 M F2<7a>3.595 -4.14 M F3<32>.144 -7.56 M F1 -2.34<3221>
-22.734 32.76 O .72 LW 319.991 223.273 285.917 223.273 DL F0<2b>325.931
227.953 Q F1 1.8<2e2e2e>2.7 -3.879 O F0<f6>-1.8 -6.021 M<f8>-6.912
21.834 M<e6>5.328 -21.834 M<e8>-6.912 21.834 M F1<31>-1.71 -11.934 M F0
<2b>3.78 E F2<53>6.984 -12.6 M F3<32>-.018 3.6 M F2<7a>2.574 -3.6 M F3
<32>.144 -7.56 M F1<32>-20.907 32.76 M 435.911 223.273 401.837 223.273
DL F0<2b>441.851 227.953 Q F2<53>9.12 -12.6 M F3<32>-.018 -7.56 M<32>
-6.3 11.7 M F2<7a>2.574 -4.14 M F3<34>.371 -7.56 M F1<32>-36.077 32.76 M
F3<32>-.378 -5.04 M F0<d7>3.618 5.04 M F1 -2.34<3221>3.42 G 496.427
223.273 457.853 223.273 DL F0<2b>502.367 227.953 Q F1 1.8<2e2e2e>2.7
-3.879 O F0<f6>-1.8 -6.021 M<f8>-6.912 21.834 M F1 1.8<2e2e2e>4.068
-15.813 O 153 300.129 EBEGIN
%%%%PAUSE
EEND/F0 18/Symbol SF<3d>193.158 300.129 Q/F1 12.6/Times-BoldItalic@0 SF
<6d>5.846 14.637 M/F2 12.6/Symbol SF<b3>-.365 E/F3 12.6/Times-Roman@0 SF
<30>-.302 E/F4 23/Symbol SF<53>-18.445 -11.578 M F0<e6>7.889 -30.959 M
<e7>-6.912 21.834 M<e7>-6.912 18 M<e8>-6.912 18 M F1<6b>17.952 -15.008 M
/F5 8.82/Times-Roman@0 SF<31>-.563 2.52 M F3<2c>-.076 -2.52 M F1<6b>.92
E F5<32>.151 2.52 M F3 -2.092 -.882<2c2e2e2e202c>-.076 -2.52 P F1<6b>
1.802 E/F6 8.82/Times-BoldItalic@0 SF<6d>.98 2.52 M F2<b3>.265 -2.52 M
F3<30>-.302 E F1<6b>-82.31 17.64 M F5<31>-.563 2.52 M F2<2b>.504 -2.52 M
F3<32>-.378 E F1<6b>.92 E F5<32>.151 2.52 M F2<2b>.504 -2.52 M F3 -.882
<2e2e2e>-.882 -2.716 O F2<2b>.756 2.716 M F1<6d6b>.806 E F6<6d>.98 2.52
M F2<3d>.491 -2.52 M F1<6d>.806 E F4<53>-56.853 -29.507 M/F7 18
/Times-BoldItalic@0 SF<53>57.387 -15.659 M F1<6b>1.28 -9 M F5<31>-.563
2.52 M F3<31>-12.466 11.398 M/F8 18/Times-Roman@0 SF<31>-26.197 20.282 M
F1<6b>.92 -5.04 M F5<31>-.563 2.52 M F7<6b>2.844 2.52 M F3<31>-.805 3.6
M F8<21>-1.44 -3.6 M .72 LW 386.656 295.449 346.694 295.449 DL F7<53>
406.186 287.529 Q F1<6b>1.28 -9 M F5<32>.151 2.52 M F3<32>-12.159 11.398
M F8<32>-27 20.282 M F1<6b>.92 -5.04 M F5<32>.151 2.52 M F7<6b>2.844
2.52 M F3<32>.216 3.6 M F8<21>-1.44 -3.6 M 439.171 295.449 396.016
295.449 DL 1.8<2e2e2e>445.111 296.25 S F7<53>19.281 -8.721 M F1<6b>1.28
-7.56 M F6<6d>.98 2.52 M F1<6d>-14.256 9.18 M F7<6d>-35.686 21.06 M F1
<6b>.92 -5.04 M F6<6d>.98 2.52 M F7<6b>2.844 2.52 M F1<6d>1.4 3.6 M F8
<21>-1.44 -3.6 M 525.25 295.449 467.431 295.449 DL F0<f6>527.41 272.229
Q<f7>-6.912 21.834 M<f7>-6.912 18 M<f8>-6.912 18 M F7<7a>7.002 -29.934 M
F1<6d>1.328 -7.56 M/F9 18/Helvetica@0 SF
<546865206571756174696f6e20697320637265617465642077697468>108 356.794 Q
/F10 16/Courier@0 SF 3.2<2e44532049>133 378.794 R<2e4551>133 394.794 Q
3.2<67666f6e74204249>133 410.794 R 3.2
<47287a29207e6d61726b203d7e2065207375707b6c6e207e2047287a297d>133
426.794 R 3.2<7e3d7e20657870206c6566742028>133 442.794 R 3.2<73756d2066
726f6d206b3e3d31207b5320737562206b207a20737570206b7d206f766572206b207269
6768742029>133 458.794 R 3.2<7e3d7e2070726f642066726f6d206b3e3d31206520
737570207b5320737562206b207a20737570206b202f6b7d>133 474.794 R<2e454e>
133 490.794 Q<2e4445>133 506.794 Q 108 525.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<37>714.44 541.28 Q 0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND/F0 16/Courier@0 SF 3.2<2e44532049>133 78.4 R<2e5041555345>133 94.4
Q<2e4551>133 110.4 Q 3.2
<6c696e657570203d206c65667420282031202b2053207375622031207a202b>133
126.4 R 3.2<7b53207375622031207375702032207a2073757020327d206f7665722032
21202b202e2e2e2072696768742029207e>133 142.4 R 3.2
<6c65667420282031202b207b53207375622032207a2073757020327d206f7665722032>
133 158.4 R 12.8<2b7b>133 174.4 S 12.8<5373>-12.8 G 3.2<7562203220737570
2032207a2073757020347d206f766572207b322073757020322063646f74203221207d>
-12.8 F 12.8<2b2e>133 190.4 S 3.2<2e2e2072696768742029207e202e2e2e>-12.8
F<2e454e>133 206.4 Q<2e4445>133 222.4 Q 3.2<2e44532049>133 238.4 R
<2e5041555345>133 254.4 Q<2e4551>133 270.4 Q 3.2
<6c696e657570203d2073756d2066726f6d206d3e3d30206c6566742028>133 286.4 R
3.2<73756d2066726f6d>133 302.4 R 3.2<70696c65207b6b207375622031202c6b20
7375622032202c2e2e2e2c206b20737562206d203e3d30>133 318.4 R<61626f7665>
133 334.4 Q 12.8<6b73>133 350.4 S 3.2
<75622031202b326b207375622032202b202e2e2e202b6d6b20737562206d203d6d7d>
-12.8 F 3.2<7b5320737562203120737570207b6b2073756220317d7d206f766572207b
3120737570206b207375622031206b20737562203120217d207e>133 366.4 R 3.2<7b
5320737562203220737570207b6b2073756220327d7d206f766572207b3220737570206b
207375622032206b20737562203220217d207e>133 382.4 R<2e2e2e>133 398.4 Q
3.2<7b5320737562206d20737570207b6b20737562206d7d7d206f766572207b6d207375
70206b20737562206d206b20737562206d20217d>133 414.4 R 3.2
<72696768742029207e207a20737570206d>133 430.4 R<2e454e>133 446.4 Q
<2e4445>133 462.4 Q 108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<38>714.44 541.28 Q 0 Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF -1.04<5061>327.095 90.4 S
<7573696e672028636f6e742e29>1.04 E 0 0 0 Cr/F1 18/Helvetica@0 SF -2.52
<596f>108 132 S 5.004<7563>2.52 G<616e20616c736f20757365207468652050>
-5.004 E -.9<4155>-2.16 G<5345206d6163726f20696e206120746162>.9 E<6c65>
-.36 E<2e>-.27 E/F2 18/Helvetica-Bold@0 SF -1.62<4154>322.488 158 S
<265420436f6d6d6f6e2053746f63>1.62 E<6b>-.36 E F1 -2.52<5965>311.229 178
S 26.64<6172205072>2.52 F 24.372<696365204469766964656e64>.27 F .72 LW
519.039 184.5 308.961 184.5 DL 308.961 200 EBEGIN
%%%%PAUSE
EEND/F0 18/Helvetica@0 SF 21.996<313938342031352d3230>308.961 200 R
<24312e3230>39.492 E 308.961 220 EBEGIN
%%%%PAUSE
EEND/F0 18/Helvetica@0 SF 27<3531>338.985 220 S 44.496
<392d323520312e3230>-27 F 308.961 240 EBEGIN
%%%%PAUSE
EEND/F0 18/Helvetica@0 SF 27<3632>338.985 240 S 44.496
<312d323820312e3230>-27 F 308.961 260 EBEGIN
%%%%PAUSE
EEND/F0 18/Helvetica@0 SF 27<3732>338.985 260 S 44.496
<302d333620312e3230>-27 F<426f>108 286 Q 3.56<782c20616c6c626f>-.54 F
8.564<7861>-.54 G 3.56<6e642076>-8.564 F -4.284<657220746963616c>-.45 F
3.56<6c696e657320617265206e6f74206472>8.564 F -.36<6177>-.18 G 8.564
<6e61>.36 G 8.564<7474>-8.564 G 3.56<68652072>-8.564 F 3.56
<69676874206d6f6d656e742c20736f206974206973>.27 F
<626574746572206e6f7420746f20757365207468656d2e>108 306 Q
<54686520746162>108 332 Q<6c6520697320637265617465642077697468>-.36 E/F1
16/Courier@0 SF 3.2<2e4453204342>133 348 R<2e5453>133 364 Q
<7461622823293b>133 380 Q 3.2<6366484220732073>133 396 R 12.8<636363>133
412 S 12.8<6e6e6e>133 428 S<2e>-12.8 E 3.2
<4154265420436f6d6d6f6e2053746f636b>133 444 R
<59656172235072696365234469766964656e>133 460 Q<5f>133 476 Q
<2e5041555345>133 492 Q<313938342331352d32302324312e3230>133 508 Q
<2e5041555345>459.4 348 Q<352331392d323523312e3230>459.4 364 Q
<2e5041555345>459.4 380 Q<362332312d323823312e3230>459.4 396 Q
<2e5041555345>459.4 412 Q<372332302d333623312e3230>459.4 428 Q<2e5445>
459.4 444 Q<2e4445>459.4 460 Q 108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<39>714.44 541.28 Q 0 Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF<436f6c6f7273>376.443 90.4 Q 0 0 0
Cr/F1 18/Helvetica@0 SF -2.52<596f>108 132 S 5.004<7563>2.52 G
<616e206368616e6765207468652066>-5.004 E<6f726567>-.54 E
<726f756e6420636f6c6f72207769746820746865206d6163726f20434f4c4f522e>-.18
E/F2 16/Courier@0 SF 3.2<2e434f4c4f5220726564>133 154 R 1 0 0 Cr F1
<6368616e676573207468652066>108 180 Q<6f726567>-.54 E
<726f756e6420636f6c6f7220746f2072656420616e64>-.18 E F2 3.2
<2e434f4c4f522050>133 202 R 0 0 0 Cr F1
<6368616e67657320697420746f2074686520707265>108 228 Q
<76696f757320636f6c6f72>-.54 E<2e>-.9 E<49662066>108 254 Q<6f6c6c6f>-.54
E -.18<7765>-.27 G 5.004<6462>.18 G 5.004<7961>-5.364 G
<7267756d656e7473>-5.004 E 5.004<2c74>-.27 G<68656e206f6e6c7920746865>
-5.004 E F2 3.2<2e434f4c4f52207265642022666972737420617267756d656e742069
7320696e2072656422202c>133 276 R 1 0 0 Cr F1 1.825
<8c72737420617267756d656e7420697320696e20726564>108 302 R 0 0 0 Cr 6.829
<2c61>C 1.825<6e6420746865206f7074696f6e616c207365636f6e6420617267756d65
6e7420697320696e207468652063757272656e74>-6.829 F<636f6c6f72>108 322 Q
<2e>-.9 E 5.546 -2.16<546f2073>108 348 T 1.226<6574207468652066>2.16 F
<6f726567>-.54 E 1.226<726f756e6420636f6c6f72206174207468652073746172>
-.18 F 6.231<746f>.72 G 6.231<6674>-6.231 G 1.227
<68652070726573656e746174696f6e2c2079>-6.231 F 1.227
<6f752063616e2075736520746865>-.36 F<6d6163726f20494e4954434f4c4f52>108
368 Q F2 3.2<2e494e4954434f4c4f522079656c6c6f77>133 390 R F1 4.366 -2.16
<546f2073>108 416 T .046<65742074686520646566>2.16 F .046<61756c742066>
-.54 F<6f726567>-.54 E .046<726f756e6420636f6c6f722066>-.18 F .046
<6f72207465>-.54 F .046<78742c2068656164657273>-.54 F 5.05<2c61>-.27 G
.045<6e642066>-5.05 F<6f6f74657273>-.54 E 5.049<2c79>-.27 G .045
<6f752063616e20757365>-5.409 F<746865206d6163726f20444546>108 436 Q -.9
<4155>-1.44 G -1.98<4c54>.9 G<434f4c4f52>1.98 E F2 3.2
<2e494e4954434f4c4f522079656c6c6f77>133 458 R/F3 18/Helvetica-Bold@0 SF
<4e6f7465>108 484 Q F1 10.302<3a44>-1.566 G<4546>-10.302 E -.9<4155>
-1.44 G -1.98<4c54>.9 G 5.298<434f4c4f5220616e6420494e4954434f4c4f522073
686f756c64206f6e6c79206265207573656420616674657220746865>1.98 F
<64658c6e6974696f6e206f662074686520484541444552206d6163726f202869662079>
108 504 Q<6f7520757365206f6e65292e>-.36 E 108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<3130>708.88 541.28 Q 0 Cg EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF<436f6c6f72732028636f6e742e29>
335.987 90.4 Q 0 0 0 Cr/F1 18/Helvetica@0 SF -2.52<596f>108 132 S 5.004
<7563>2.52 G<616e2064658c6e65206120636f6c6f72207769746820746865206d6163
726f20444546434f4c4f522e>-5.004 E/F2 16/Courier@0 SF 3.2
<2e444546434f4c4f522062726f776e20302e363420302e313620302e3136>133 154 R
F1<64658c6e65732074686520636f6c6f72>108 180 Q 0.64 0.16 0.16 Cr<4252>
5.004 E -.54<4f57>-.36 G<4e>.54 E 0 0 0 Cr<2e>5.004 E 2.529<546865206172
67756d656e747320322c20332c203420726570726573656e74207468652076>108 200 R
2.528<616c7565732066>-.45 F 2.528
<6f722074686520636f6c6f7273207265642c2067>-.54 F 2.528
<7265656e2c20616e64>-.18 F -.36<626c>108 220 S<7565>.36 E 5.004<2e54>
-.27 G<68652076>-5.004 E<616c756573206d>-.45 E<7573742062652062657477>
-.18 E<65656e203020616e6420312e>-.18 E -2.52<596f>108 246 S 8.026<7563>
2.52 G 3.022<616e20616c736f206368616e6765207468652066>-8.026 F<6f726567>
-.54 E 3.022<726f756e6420636f6c6f722062>-.18 F 8.027<7965>-.36 G 3.023
<6d62656464696e672061205c>-8.027 F<2a>3.6 I 3.023
<5b636f6c585d20617420746865>-3.6 J 3.173<6465736972656420706f696e742074
6f207365742074686520636f6c6f7220746f20582e>108 266 R 3.172
<496620582069732050>13.18 F 8.176<2c74>-3.24 G 3.172
<686520636f6c6f72206973206368616e67656420746f20746865>-8.176 F<707265>
108 286 Q<76696f757320636f6c6f72>-.54 E<2e>-.9 E F2 3.2<63757272656e7420
5c2a5b636f6c626c75655d626c7565205c2a5b636f6c7265645d726564205c2a5b636f6c
505d70726576696f7573>133 308 R F1<6265636f6d6573>108 334 Q
<63757272656e74>108 354 Q 0 0 1 Cr -.36<626c>5.004 G<7565>.36 E 1 0 0 Cr
<726564>5.004 E 0 0 1 Cr<707265>5.004 E<76696f7573>-.54 E 0 0 0 Cr 1.494
<416e6f74686572205c>108 374 R<2a>3.6 I 1.494<5b636f6c505d2066>-3.6 J
1.494<6f722073657474696e67207468652066>-.54 F<6f726567>-.54 E 1.494<726f
756e6420636f6c6f7220746f207468652063757272656e74206f6e6520646f6573206e6f
74>-.18 F -.18<776f>108 394 S .27<726b>.18 G 5.004<2c61>-.27 G 5.004
<7369>-5.004 G 5.004<7464>-5.004 G<696420696e206120707265>-5.004 E
<76696f75732076>-.54 E<657273696f6e206f66206770726573656e742e>-.45 E/F3
18/Helvetica-Bold@0 SF<4e6f7465>108 420 Q F1 5.004<3a74>-1.566 G
<6865207573616765206f66205c>-5.004 E<2a>3.6 I<5b636f6c585d20697320646570
726563617465642c20757365205c6d5b2e2e5d20696e73746561642e>-3.6 I 108
529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<3131>708.88 541.28 Q 0 Cg EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
110.78 12 EBEGIN
0.5 0.5 0.8 54 12 774 552 FillSolid
EEND 239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF<50726564658c6e656420436f6c6f7273>
309.961 90.4 Q 0 0 0 Cr/F1 18/Helvetica@0 SF<5468652066>108 132 Q
<6f6c6c6f>-.54 E<77696e6720636f6c6f7273206172652064658c6e65642062>-.27 E
5.004<7974>-.36 G<68656972206e616d6520696e206c6f>-5.004 E -.18<7765>-.27
G<72636173653a>.18 E 1 0 0 Cr<524544>180 152 Q 0 1 0 Cr<475245454e>5.004
E 0 0 1 Cr<424c5545>5.004 E 0 1 1 Cr<4359>5.004 E<414e>-1.98 E 1 0 1 Cr
<4d41>5.004 E<47454e54>-.54 E<41>-2.16 E 1 1 0 Cr<59454c4c4f>5.004 E<57>
-.54 E 1 1 1 Cr<5748495445>5.004 E 0 0 0 Cr<424c41>5.004 E<434b>-.54 E
1.394<5468652066>108 178 R<6f6c6c6f>-.54 E 1.394
<77696e6720636f6c6f7273206172652064658c6e65642062>-.27 F 6.398<7974>-.36
G 1.393<68656972206e616d6520696e206c6f>-6.398 F -.18<7765>-.27 G 1.393
<72636173652066>.18 F<6f6c6c6f>-.54 E -.18<7765>-.27 G 6.397<6462>.18 G
6.397<7974>-6.757 G<6865>-6.397 E -.18<6e75>108 198 S
<6d62657220696e20746865206c65667420636f6c756d6e3a>.18 E<39>180 218 Q 0.9
0 0 Cr<524544>5.004 E 0 0.9 0 Cr<475245454e>5.004 E 0 0 0.9 Cr<424c5545>
5.004 E 0 0.9 0.9 Cr<4359>5.004 E<414e>-1.98 E 0.9 0 0.9 Cr<4d41>5.004 E
<47454e54>-.54 E<41>-2.16 E 0.9 0.9 0 Cr<59454c4c4f>5.004 E<57>-.54 E
0.9 0.9 0.9 Cr<475241>5.004 E<59>-1.8 E 0 0 0 Cr<38>180 238 Q 0.8 0 0 Cr
<524544>5.004 E 0 0.8 0 Cr<475245454e>5.004 E 0 0 0.8 Cr<424c5545>5.004
E 0 0.8 0.8 Cr<4359>5.004 E<414e>-1.98 E 0.8 0 0.8 Cr<4d41>5.004 E
<47454e54>-.54 E<41>-2.16 E 0.8 0.8 0 Cr<59454c4c4f>5.004 E<57>-.54 E
0.8 0.8 0.8 Cr<475241>5.004 E<59>-1.8 E 0 0 0 Cr<37>180 258 Q 0.7 0 0 Cr
<524544>5.004 E 0 0.7 0 Cr<475245454e>5.004 E 0 0 0.7 Cr<424c5545>5.004
E 0 0.7 0.7 Cr<4359>5.004 E<414e>-1.98 E 0.7 0 0.7 Cr<4d41>5.004 E
<47454e54>-.54 E<41>-2.16 E 0.7 0.7 0 Cr<59454c4c4f>5.004 E<57>-.54 E
0.7 0.7 0.7 Cr<475241>5.004 E<59>-1.8 E 0 0 0 Cr<36>180 278 Q 0.6 0 0 Cr
<524544>5.004 E 0 0.6 0 Cr<475245454e>5.004 E 0 0 0.6 Cr<424c5545>5.004
E 0 0.6 0.6 Cr<4359>5.004 E<414e>-1.98 E 0.6 0 0.6 Cr<4d41>5.004 E
<47454e54>-.54 E<41>-2.16 E 0.6 0.6 0 Cr<59454c4c4f>5.004 E<57>-.54 E
0.6 0.6 0.6 Cr<475241>5.004 E<59>-1.8 E 0 0 0 Cr<35>180 298 Q 0.5 0 0 Cr
<524544>5.004 E 0 0.5 0 Cr<475245454e>5.004 E 0 0 0.5 Cr<424c5545>5.004
E 0 0.5 0.5 Cr<4359>5.004 E<414e>-1.98 E 0.5 0 0.5 Cr<4d41>5.004 E
<47454e54>-.54 E<41>-2.16 E 0.5 0.5 0 Cr<59454c4c4f>5.004 E<57>-.54 E
0.5 0.5 0.5 Cr<475241>5.004 E<59>-1.8 E 0 0 0 Cr<34>180 318 Q 0.4 0 0 Cr
<524544>5.004 E 0 0.4 0 Cr<475245454e>5.004 E 0 0 0.4 Cr<424c5545>5.004
E 0 0.4 0.4 Cr<4359>5.004 E<414e>-1.98 E 0.4 0 0.4 Cr<4d41>5.004 E
<47454e54>-.54 E<41>-2.16 E 0.4 0.4 0 Cr<59454c4c4f>5.004 E<57>-.54 E
0.4 0.4 0.4 Cr<475241>5.004 E<59>-1.8 E 0 0 0 Cr<33>180 338 Q 0.3 0 0 Cr
<524544>5.004 E 0 0.3 0 Cr<475245454e>5.004 E 0 0 0.3 Cr<424c5545>5.004
E 0 0.3 0.3 Cr<4359>5.004 E<414e>-1.98 E 0.3 0 0.3 Cr<4d41>5.004 E
<47454e54>-.54 E<41>-2.16 E 0.3 0.3 0 Cr<59454c4c4f>5.004 E<57>-.54 E
0.3 0.3 0.3 Cr<475241>5.004 E<59>-1.8 E 0 0 0 Cr<32>180 358 Q 0.2 0 0 Cr
<524544>5.004 E 0 0.2 0 Cr<475245454e>5.004 E 0 0 0.2 Cr<424c5545>5.004
E 0 0.2 0.2 Cr<4359>5.004 E<414e>-1.98 E 0.2 0 0.2 Cr<4d41>5.004 E
<47454e54>-.54 E<41>-2.16 E 0.2 0.2 0 Cr<59454c4c4f>5.004 E<57>-.54 E
0.2 0.2 0.2 Cr<475241>5.004 E<59>-1.8 E 0 0 0 Cr<31>180 378 Q 0.1 0 0 Cr
<524544>5.004 E 0 0.1 0 Cr<475245454e>5.004 E 0 0 0.1 Cr<424c5545>5.004
E 0 0.1 0.1 Cr<4359>5.004 E<414e>-1.98 E 0.1 0 0.1 Cr<4d41>5.004 E
<47454e54>-.54 E<41>-2.16 E 0.1 0.1 0 Cr<59454c4c4f>5.004 E<57>-.54 E
0.1 0.1 0.1 Cr<475241>5.004 E<59>-1.8 E 108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 0 0 0 Cr 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL
120 529.28 115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28
DL 135 529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140
529.28 DL 150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28
155 529.28 DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175
529.28 170 529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL
190 529.28 185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28
DL 205 529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210
529.28 DL 220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28
225 529.28 DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245
529.28 240 529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL
260 529.28 255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28
DL 275 529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280
529.28 DL 290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28
295 529.28 DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315
529.28 310 529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL
330 529.28 325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28
DL 345 529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350
529.28 DL 360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28
365 529.28 DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385
529.28 380 529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL
400 529.28 395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28
DL 415 529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420
529.28 DL 430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28
435 529.28 DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455
529.28 450 529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL
470 529.28 465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28
DL 485 529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490
529.28 DL 500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28
505 529.28 DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525
529.28 520 529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL
540 529.28 535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28
DL 555 529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560
529.28 DL 570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28
575 529.28 DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595
529.28 590 529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL
610 529.28 605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28
DL 625 529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630
529.28 DL 640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28
645 529.28 DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665
529.28 660 529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL
680 529.28 675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28
DL 695 529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700
529.28 DL 710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28
715 529.28 DL/F0 10/Helvetica@0 SF<3132>708.88 541.28 Q 0 Cg EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
108 12 EBEGIN
0.0 0.0 1.0 54 12 774 552 FillSolid
EEND 239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 1 1 1 Cr/F0 26/Helvetica@0 SF<426163>338.522 90.4 Q<6b67>-.52 E
<726f756e6473>-.26 E 0 0 0.4 Cr/F1 22/Helvetica@0 SF<536f6c6964>144 132
Q 1 1 0 Cr/F2 18/Helvetica@0 SF<5468697320626163>108 166.4 Q<6b67>-.36 E
<726f756e6420697320637265617465642077697468>-.18 E/F3 16/Courier@0 SF
3.2<2e4241434b47524f554e4420536f6c696420626c7565>133 188.4 R 108 529.28
EBEGIN
%%%%BEGINBOT
EEND .4 LW 0 0 0 Cr 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL
120 529.28 115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28
DL 135 529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140
529.28 DL 150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28
155 529.28 DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175
529.28 170 529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL
190 529.28 185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28
DL 205 529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210
529.28 DL 220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28
225 529.28 DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245
529.28 240 529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL
260 529.28 255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28
DL 275 529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280
529.28 DL 290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28
295 529.28 DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315
529.28 310 529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL
330 529.28 325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28
DL 345 529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350
529.28 DL 360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28
365 529.28 DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385
529.28 380 529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL
400 529.28 395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28
DL 415 529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420
529.28 DL 430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28
435 529.28 DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455
529.28 450 529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL
470 529.28 465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28
DL 485 529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490
529.28 DL 500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28
505 529.28 DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525
529.28 520 529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL
540 529.28 535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28
DL 555 529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560
529.28 DL 570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28
575 529.28 DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595
529.28 590 529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL
610 529.28 605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28
DL 625 529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630
529.28 DL 640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28
645 529.28 DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665
529.28 660 529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL
680 529.28 675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28
DL 695 529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700
529.28 DL 710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28
715 529.28 DL/F0 10/Helvetica@0 SF<3133>708.88 541.28 Q 0 Cg EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
110.78 12 EBEGIN
0.0 0.0 1.0 0.0 0.0 0.5  54 12 774 552 FillGradX
EEND 239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 1 1 1 Cr/F0 26/Helvetica@0 SF<426163>298.066 90.4 Q<6b67>-.52 E
<726f756e64732028636f6e742e29>-.26 E 0 0 0.4 Cr/F1 22/Helvetica@0 SF
<4772>144 132 Q<616469656e742058>-.22 E 1 1 0 Cr/F2 18/Helvetica@0 SF
<5468697320626163>108 166.4 Q<6b67>-.36 E
<726f756e6420697320637265617465642077697468>-.18 E/F3 16/Courier@0 SF
3.2<2e4241434b47524f554e4420477261645820626c756520626c756535>133 188.4 R
108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 0 0 0 Cr 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL
120 529.28 115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28
DL 135 529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140
529.28 DL 150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28
155 529.28 DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175
529.28 170 529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL
190 529.28 185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28
DL 205 529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210
529.28 DL 220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28
225 529.28 DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245
529.28 240 529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL
260 529.28 255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28
DL 275 529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280
529.28 DL 290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28
295 529.28 DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315
529.28 310 529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL
330 529.28 325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28
DL 345 529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350
529.28 DL 360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28
365 529.28 DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385
529.28 380 529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL
400 529.28 395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28
DL 415 529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420
529.28 DL 430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28
435 529.28 DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455
529.28 450 529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL
470 529.28 465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28
DL 485 529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490
529.28 DL 500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28
505 529.28 DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525
529.28 520 529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL
540 529.28 535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28
DL 555 529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560
529.28 DL 570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28
575 529.28 DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595
529.28 590 529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL
610 529.28 605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28
DL 625 529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630
529.28 DL 640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28
645 529.28 DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665
529.28 660 529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL
680 529.28 675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28
DL 695 529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700
529.28 DL 710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28
715 529.28 DL/F0 10/Helvetica@0 SF<3134>708.88 541.28 Q 0 Cg EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
110.78 12 EBEGIN
0.0 0.0 1.0 0.0 0.0 0.5  54 12 774 552 FillGradY
EEND 239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 1 1 1 Cr/F0 26/Helvetica@0 SF<426163>298.066 90.4 Q<6b67>-.52 E
<726f756e64732028636f6e742e29>-.26 E 0 0 0.4 Cr/F1 22/Helvetica@0 SF
<4772>144 132 Q<616469656e742059>-.22 E 1 1 0 Cr/F2 18/Helvetica@0 SF
<5468697320626163>108 166.4 Q<6b67>-.36 E
<726f756e6420697320637265617465642077697468>-.18 E/F3 16/Courier@0 SF
3.2<2e4241434b47524f554e4420477261645920626c756520626c756535>133 188.4 R
108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 0 0 0 Cr 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL
120 529.28 115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28
DL 135 529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140
529.28 DL 150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28
155 529.28 DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175
529.28 170 529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL
190 529.28 185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28
DL 205 529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210
529.28 DL 220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28
225 529.28 DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245
529.28 240 529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL
260 529.28 255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28
DL 275 529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280
529.28 DL 290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28
295 529.28 DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315
529.28 310 529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL
330 529.28 325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28
DL 345 529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350
529.28 DL 360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28
365 529.28 DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385
529.28 380 529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL
400 529.28 395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28
DL 415 529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420
529.28 DL 430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28
435 529.28 DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455
529.28 450 529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL
470 529.28 465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28
DL 485 529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490
529.28 DL 500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28
505 529.28 DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525
529.28 520 529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL
540 529.28 535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28
DL 555 529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560
529.28 DL 570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28
575 529.28 DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595
529.28 590 529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL
610 529.28 605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28
DL 625 529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630
529.28 DL 640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28
645 529.28 DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665
529.28 660 529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL
680 529.28 675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28
DL 695 529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700
529.28 DL 710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28
715 529.28 DL/F0 10/Helvetica@0 SF<3135>708.88 541.28 Q 0 Cg EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
110.78 12 EBEGIN
0.0 0.0 1.0 0.0 0.0 0.5 100 45 54 12 774 552 FillGradAngle
EEND 239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 1 1 1 Cr/F0 26/Helvetica@0 SF<426163>298.066 90.4 Q<6b67>-.52 E
<726f756e64732028636f6e742e29>-.26 E 0 0 0.4 Cr/F1 22/Helvetica@0 SF
<4772>144 132 Q<616469656e74207769746820416e676c65>-.22 E 1 1 0 Cr/F2 18
/Helvetica@0 SF<5468697320626163>108 166.4 Q<6b67>-.36 E
<726f756e6420697320637265617465642077697468>-.18 E/F3 16/Courier@0 SF
3.2<2e4241434b47524f554e442047726164416e676c6520626c756520626c7565352031
3030203435>133 188.4 R 108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 0 0 0 Cr 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL
120 529.28 115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28
DL 135 529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140
529.28 DL 150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28
155 529.28 DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175
529.28 170 529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL
190 529.28 185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28
DL 205 529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210
529.28 DL 220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28
225 529.28 DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245
529.28 240 529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL
260 529.28 255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28
DL 275 529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280
529.28 DL 290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28
295 529.28 DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315
529.28 310 529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL
330 529.28 325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28
DL 345 529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350
529.28 DL 360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28
365 529.28 DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385
529.28 380 529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL
400 529.28 395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28
DL 415 529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420
529.28 DL 430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28
435 529.28 DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455
529.28 450 529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL
470 529.28 465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28
DL 485 529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490
529.28 DL 500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28
505 529.28 DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525
529.28 520 529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL
540 529.28 535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28
DL 555 529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560
529.28 DL 570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28
575 529.28 DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595
529.28 590 529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL
610 529.28 605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28
DL 625 529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630
529.28 DL 640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28
645 529.28 DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665
529.28 660 529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL
680 529.28 675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28
DL 695 529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700
529.28 DL 710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28
715 529.28 DL/F0 10/Helvetica@0 SF<3136>708.88 541.28 Q 0 Cg EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF<426163>298.066 90.4 Q<6b67>-.52 E
<726f756e64732028636f6e742e29>-.26 E/F1 22/Helvetica@0 SF<4e6f6e65>144
132 Q 0 0 0 Cr/F2 18/Helvetica@0 SF -2.52<596f>108 166.4 S 5.004<7563>
2.52 G<616e206765742072>-5.004 E<6964206f6620626163>.27 E<6b67>-.36 E
<726f756e64732077697468>-.18 E/F3 16/Courier@0 SF 3.2
<2e4241434b47524f554e44204e6f6e65>133 188.4 R 108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<3137>708.88 541.28 Q 0 Cg EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF<46696c6c65642052656374616e676c6573>
314.303 90.4 Q 0 0 0 Cr/F1 18/Helvetica@0 SF 1.628<53696e63652077>108
132 R 6.632<6568>-.18 G -.36<6176>-6.632 G 6.632<6574>-.09 G 1.628
<686520726f7574696e65732066>-6.632 F 1.628
<6f72208c6c6c696e672074686520626163>-.54 F<6b67>-.36 E 1.628
<726f756e642c2077>-.18 F 6.633<656d>-.18 G 1.629<696768742061732077>
-6.633 F 1.629<656c6c20757365>-.18 F<7468656d2066>108 152 Q
<6f72208c6c6c65642072656374616e676c6573>-.54 E<2e>-.27 E
<5468652072656374616e676c65732062656c6f>108 178 Q 5.004<7761>-.27 G
<7265206372656174656420776974683a>-5.004 E 421.866 178 EBEGIN
1.0 0.0 0.0 342 300 414 372 FillSolid
EEND 421.866 178 EBEGIN
0.0 1.0 0.0 0.0 0.6 0.0  378 336 450 408 FillGradX
EEND 421.866 178 EBEGIN
0.0 0.0 1.0 0.0 0.0 0.6  414 372 486 444 FillGradY
EEND 421.866 178 EBEGIN
1.0 1.0 0.0 0.6 0.6 0.0 30 45 450 408 522 480 FillGradAngle
EEND/F0 16/Courier@0 SF 3.2
<2e46494c4c20346920346920356920356920536f6c696420726564>133 200 R 3.2<2e
46494c4c20342e356920342e356920352e356920352e356920477261645820677265656e
20677265656e36>133 216 R 3.2
<2e46494c4c20356920356920366920366920477261645920626c756520626c756536>
133 232 R 3.2<2e46494c4c20352e356920352e356920362e356920362e356920477261
64416e676c652079656c6c6f772079656c6c6f7736203330203435>133 248 R 108
529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<3138>708.88 541.28 Q 0 Cg EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF<426c6f63>375.975 90.4 Q<6b73>-.52 E
0 0 0 Cr/F1 18/Helvetica@0 SF -2.52<596f>108 132 S 5.004<7563>2.52 G
<616e206372656174652062>-5.004 E<6c6f63>-.36 E<6b7320616e>-.36 E<797768
657265207769746820746865206d6163726f7320424c4f434b5320616e20424c4f434b45
2e>-.27 E<2e424c4f434b53203169203469>180 308 Q<546869732069732062>180
328 Q<6c6f63>-.36 E 5.004<6b31>-.36 G 5.004<2c77>-5.004 G<69746820782d70
6f736974696f6e20316920616e6420792d706f736974696f6e2034692e>-5.004 E
<2e424c4f434b45>180 348 Q 108 152 EBEGIN
%%%%PAUSE
EEND/F0 18/Helvetica@0 SF<2e424c4f434b53203469203369>396 236 Q 1.578
<546869732069732062>396 256 R<6c6f63>-.36 E 6.581<6b32>-.36 G 6.581
<2c77>-6.581 G 1.577<69746820782d706f736974696f6e20346920616e6420792d>
-6.581 F<706f736974696f6e2033692e>396 276 Q<2e424c4f434b45>396 296 Q 108
152 EBEGIN
%%%%PAUSE
EEND/F0 18/Helvetica@0 SF<2e424c4f434b53203469203569203269>396 380 Q
8.562<546869732069732062>396 400 R<6c6f63>-.36 E 13.566<6b33>-.36 G<2c>
-13.566 E 2.979<7769746820782d706f736974696f6e2034692c>396 420 R 3.969
<792d706f736974696f6e2035692c20616e64>396 440 R
<6c696e65206c656e6774682032692e>396 460 Q<2e424c4f434b45>396 480 Q 108
152 EBEGIN
%%%%PAUSE
EEND/F0 18/Helvetica@0 SF<416674657220612062>108 152 Q<6c6f63>-.36 E
<6b2c2079>-.36 E<6f75207265747572>-.36 E 5.004<6e74>.45 G 5.004<6f74>
-5.004 G<686520706f736974696f6e20626566>-5.004 E<6f7265207468652062>-.54
E<6c6f63>-.36 E<6b2e>-.36 E 108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<3139>708.88 541.28 Q 0 Cg EP
%%Page: 20 20
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF<426c6f63>335.519 90.4 Q
<6b732028636f6e742e29>-.52 E 0 0 0 Cr/F1 18/Helvetica@0 SF 1.156
<496620746865208c72737420617267756d656e74206f6620424c4f434b53206973>108
132 R/F2 18/Courier@0 SF<6f6e6365>6.16 E F1 6.16<2c74>C 1.156<68652062>
-6.16 F<6c6f63>-.36 E 6.16<6b6f>-.36 G 1.156
<6e6c792061707065617273206f6e6365>-6.16 F 11.164<2e59>-.27 G<6f75>
-13.684 E<63616e20757365207468697320696e20636f6d62696e6174696f6e20776974
68207468652050>108 152 Q -.9<4155>-2.16 G<5345206d6163726f>.9 E<2e>-.72
E/F3 16/Helvetica@0 SF<83>138.4 178 Q F1<6c697374206974656d2031>9 E
234.018 178 EBEGIN
%%%%BEGINONCE
EEND/F0 18/Helvetica@0 SF 9<8a73>171 204 S<75626974656d20312e31>-9 E 9
<8a73>171 230 S<75626974656d20312e32>-9 E 153 178 EBEGIN
%%%%ENDONCE
EEND 153 178 EBEGIN
%%%%PAUSE
EEND/F0 16/Helvetica@0 SF<83>138.4 204 Q/F1 18/Helvetica@0 SF
<6c697374206974656d2032>9 E 234.018 204 EBEGIN
%%%%BEGINONCE
EEND/F0 18/Helvetica@0 SF 9<8a73>171 230 S<75626974656d20322e31>-9 E 9
<8a73>171 256 S<75626974656d20322e32>-9 E 153 204 EBEGIN
%%%%ENDONCE
EEND 153 204 EBEGIN
%%%%PAUSE
EEND/F0 16/Helvetica@0 SF<83>138.4 230 Q/F1 18/Helvetica@0 SF
<6c697374206974656d2033>9 E<5468652061626f>108 256 Q .9 -.45<76652069>
-.27 H 5.004<7363>.45 G<7265617465642077697468>-5.004 E/F2 16/Courier@0
SF<2e424c>133 272 Q<2e4c49>133 288 Q 3.2<6c697374206974656d2031>133 304
R 3.2<2e424c4f434b53206f6e6365>133 320 R<2e444c>133 336 Q<2e4c49>133 352
Q 3.2<7375626974656d20312e31>133 368 R<2e4c49>133 384 Q 3.2
<7375626974656d20312e32>133 400 R 3.2<2e4c452031>133 416 R
<2e424c4f434b45>133 432 Q<2e5041555345>133 448 Q<2e4c49>133 464 Q 3.2
<6c697374206974656d2032>133 480 R 3.2<2e424c4f434b53206f6e6365>133 496 R
<2e444c>133 512 Q<2e4c49>459.4 272 Q 3.2<7375626974656d20322e31>459.4
288 R<2e4c49>459.4 304 Q 3.2<7375626974656d20322e32>459.4 320 R 3.2
<2e4c452031>459.4 336 R<2e424c4f434b45>459.4 352 Q<2e5041555345>459.4
368 Q<2e4c49>459.4 384 Q 3.2<6c697374206974656d2033>459.4 400 R 3.2
<2e4c452031>459.4 416 R 108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<3230>708.88 541.28 Q 0 Cg EP
%%Page: 21 21
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF<4c696e6b73>383.658 90.4 Q 0 0 0 Cr
/F1 18/Helvetica@0 SF -2.52<596f>108 132 S 5.004<7563>2.52 G
<616e206d616b>-5.004 E 5.004<65616c>-.36 G
<696e6b207769746820746865206d6163726f204c494e4b2e>-5.004 E
<546865206c696e6b>108 152 Q 176.022 152 EBEGIN
%%%%LINKOPTIONS 1 0.0 0.0 1.0
EEND 0 0 0.7 Cr/F0 18/Helvetica@0 SF<6e65>176.022 152 Q<78742070616765>
-.54 E 259.542 152 EBEGIN
%%%%LINK 174022 137000 83520 20000 L1
EEND 0 0 0 Cr/F0 18/Helvetica@0 SF<6973206d6164652077697468>259.542 152
Q/F1 16/Courier@0 SF 3.2<2e4c494e4b204c3120226e657874207061676522>133
174 R 108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<3231>708.88 541.28 Q 0 Cg EP
%%Page: 22 22
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF<4c696e6b732028636f6e742e29>343.202
90.4 Q 108 132 EBEGIN
%%%%DEST L1 22
EEND 0 0 0 Cr/F0 18/Helvetica@0 SF .288
<4f6e2074686973207061676520612064657374696e6174696f6e2066>108 132 R .288
<6f7220746865206c696e6b206f6e2074686520707265>-.54 F .288
<76696f757320706167652077>-.54 F .288<617320637265617465642077697468>
-.27 F<746865206d6163726f2044455354494e41>108 152 Q<54494f4e2e>-2.16 E
/F1 16/Courier@0 SF 3.2<2e44455354494e4154494f4e204c31>133 174 R F0
-2.52<596f>108 200 S 5.004<7563>2.52 G
<616e206368616e67652074686520636f6c6f722066>-5.004 E<6f7220746865206c69
6e6b73207769746820746865206d6163726f204c494e4b434f4c4f522e>-.54 E F1 3.2
<2e4c494e4b434f4c4f5220626c756537>133 222 R F0 5.004<4173>108 248 S<6563
6f6e6420617267756d656e742073706563698c65732074686520626f7264657277696474
68206f6620746865206c696e6b2e>-5.004 E F1 3.2
<2e4c494e4b434f4c4f5220626c7565372031>133 270 R F0 5.004<4174>108 296 S<
6869726420617267756d656e742073706563698c65732074686520626f72646572636f6c
6f72>-5.004 E<2e>-.9 E F1 3.2
<2e4c494e4b434f4c4f5220626c756537203120626c7565>133 318 R 108 529.28
EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<3232>708.88 541.28 Q 0 Cg EP
%%Page: 23 23
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF<436f6e74656e7473>361.974 90.4 Q 0 0
0 Cr/F1 18/Helvetica@0 SF -2.52<596f>108 132 S 5.223<7563>2.52 G .219
<616e206d616b>-5.223 F 5.223<656163>-.36 G .219
<6f6e74656e74732070616765207769746820746865206d6163726f20454e44>-5.223 F
10.227<2e54>-1.26 G .218<686520636f6e74656e747320636f6e73697374206f66>
-10.227 F .422<616c6c20746865207469746c6573>108 152 R 10.43<2e54>-.27 G
<6865>-10.43 E 5.426<7961>-.36 G .422<726520747572>-5.426 F .422
<6e656420696e746f206c696e6b73207468617420676f20626163>.45 F 5.427<6b74>
-.36 G 5.427<6f74>-5.427 G .423
<686520746f70206f66207468652070616765206174>-5.427 F
<776869636820746865207469746c657320617070656172>108 172 Q<2e>-.9 E -2.52
<596f>108 198 S 5.004<7563>2.52 G<616e2061646420736f6d657468696e6720746f
2074686520636f6e74656e7473207769746820746865206d6163726f20414444434f4e54
454e54>-5.004 E<2e>-2.16 E/F2 16/Courier@0 SF 3.2<2e414444434f4e54454e54
20225468697320697320616464656420746f2074686520636f6e74656e747322>133 220
R 108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<3233>708.88 541.28 Q 0 Cg EP
%%Page: 24 24
%%BeginPageSetup
BP
%%EndPageSetup
239 329 36 134 -36 134 108 52.8 PBEGIN
%%BeginDocument: smile.epsf
%%Creator: Tk Canvas Widget
%%For: Bob Diertens,F.240,+31 20 525 7593,,
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Wed Nov 22 15:12:46 2000
%%BoundingBox: 239 329 373 463
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% SCCS: @(#) prolog.ps 1.7 96/07/08 17:52:14

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%BeginSetup
/CL 2 def
%%EndSetup

save
306.0 396.0 translate
0.7997 0.7997 scale
-178 -83 translate
95 166 moveto 261 166 lineto 261 0 lineto 95 0 lineto closepath clip newpath
gsave
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1.000 1.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
178 83 translate 80 80 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
5 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
156 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 110 translate 8 8 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 63 moveto
144.67 49.66 152.995 41.335 163 38 curveto
173.005 34.665 182.995 34.665 193 38 curveto
203.005 41.335 211.33 49.66 218 63 curveto
5 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EOF
%%EndDocument
end PEND .4 LW 0 0 0 Cr 113 57.6 108 57.6 DL 115 57.6 110 57.6 DL 120
57.6 115 57.6 DL 125 57.6 120 57.6 DL 130 57.6 125 57.6 DL 135 57.6 130
57.6 DL 140 57.6 135 57.6 DL 145 57.6 140 57.6 DL 150 57.6 145 57.6 DL
155 57.6 150 57.6 DL 160 57.6 155 57.6 DL 165 57.6 160 57.6 DL 170 57.6
165 57.6 DL 175 57.6 170 57.6 DL 180 57.6 175 57.6 DL 185 57.6 180 57.6
DL 190 57.6 185 57.6 DL 195 57.6 190 57.6 DL 200 57.6 195 57.6 DL 205
57.6 200 57.6 DL 210 57.6 205 57.6 DL 215 57.6 210 57.6 DL 220 57.6 215
57.6 DL 225 57.6 220 57.6 DL 230 57.6 225 57.6 DL 235 57.6 230 57.6 DL
240 57.6 235 57.6 DL 245 57.6 240 57.6 DL 250 57.6 245 57.6 DL 255 57.6
250 57.6 DL 260 57.6 255 57.6 DL 265 57.6 260 57.6 DL 270 57.6 265 57.6
DL 275 57.6 270 57.6 DL 280 57.6 275 57.6 DL 285 57.6 280 57.6 DL 290
57.6 285 57.6 DL 295 57.6 290 57.6 DL 300 57.6 295 57.6 DL 305 57.6 300
57.6 DL 310 57.6 305 57.6 DL 315 57.6 310 57.6 DL 320 57.6 315 57.6 DL
325 57.6 320 57.6 DL 330 57.6 325 57.6 DL 335 57.6 330 57.6 DL 340 57.6
335 57.6 DL 345 57.6 340 57.6 DL 350 57.6 345 57.6 DL 355 57.6 350 57.6
DL 360 57.6 355 57.6 DL 365 57.6 360 57.6 DL 370 57.6 365 57.6 DL 375
57.6 370 57.6 DL 380 57.6 375 57.6 DL 385 57.6 380 57.6 DL 390 57.6 385
57.6 DL 395 57.6 390 57.6 DL 400 57.6 395 57.6 DL 405 57.6 400 57.6 DL
410 57.6 405 57.6 DL 415 57.6 410 57.6 DL 420 57.6 415 57.6 DL 425 57.6
420 57.6 DL 430 57.6 425 57.6 DL 435 57.6 430 57.6 DL 440 57.6 435 57.6
DL 445 57.6 440 57.6 DL 450 57.6 445 57.6 DL 455 57.6 450 57.6 DL 460
57.6 455 57.6 DL 465 57.6 460 57.6 DL 470 57.6 465 57.6 DL 475 57.6 470
57.6 DL 480 57.6 475 57.6 DL 485 57.6 480 57.6 DL 490 57.6 485 57.6 DL
495 57.6 490 57.6 DL 500 57.6 495 57.6 DL 505 57.6 500 57.6 DL 510 57.6
505 57.6 DL 515 57.6 510 57.6 DL 520 57.6 515 57.6 DL 525 57.6 520 57.6
DL 530 57.6 525 57.6 DL 535 57.6 530 57.6 DL 540 57.6 535 57.6 DL 545
57.6 540 57.6 DL 550 57.6 545 57.6 DL 555 57.6 550 57.6 DL 560 57.6 555
57.6 DL 565 57.6 560 57.6 DL 570 57.6 565 57.6 DL 575 57.6 570 57.6 DL
580 57.6 575 57.6 DL 585 57.6 580 57.6 DL 590 57.6 585 57.6 DL 595 57.6
590 57.6 DL 600 57.6 595 57.6 DL 605 57.6 600 57.6 DL 610 57.6 605 57.6
DL 615 57.6 610 57.6 DL 620 57.6 615 57.6 DL 625 57.6 620 57.6 DL 630
57.6 625 57.6 DL 635 57.6 630 57.6 DL 640 57.6 635 57.6 DL 645 57.6 640
57.6 DL 650 57.6 645 57.6 DL 655 57.6 650 57.6 DL 660 57.6 655 57.6 DL
665 57.6 660 57.6 DL 670 57.6 665 57.6 DL 675 57.6 670 57.6 DL 680 57.6
675 57.6 DL 685 57.6 680 57.6 DL 690 57.6 685 57.6 DL 695 57.6 690 57.6
DL 700 57.6 695 57.6 DL 705 57.6 700 57.6 DL 710 57.6 705 57.6 DL 715
57.6 710 57.6 DL 720 57.6 715 57.6 DL/F0 18/Helvetica@0 SF
<44656d6f6e737472>151.2 40.8 Q<6174696f6e206f662050726573656e746174696f
6e7320776974682047726f666620616e64204163726f72656164>-.18 E 108 69.6
EBEGIN
%%%%ENDTOP
EEND 0 0 0.4 Cr/F0 26/Helvetica@0 SF<42726f>370.853 90.4 Q<777365>-.39 E
0 0 0 Cr/F1 18/Helvetica@0 SF -2.52<596f>108 132 S 8.919<7563>2.52 G
3.915<616e2062726f>-8.919 F 3.915<777365207468726f7567682061207072657365
6e746174696f6e20776974682074686520706f73736962696c69746965732070726f>
-.27 F 3.915<76696465642062>-.27 F<79>-.36 E<6163726f726561642e>108 152
Q<4966>108 172 Q 0 0 1 Cr<70726573656e747073>6.123 E 0 0 0 Cr 1.12
<697320676976>6.123 F 1.12
<656e20746865206f7074696f6e202d6c2c207468657265206172652062>-.45 F 1.12
<7574746f6e7320616464656420696e207468652072>-.36 F 1.12<69676874206c6f>
.27 F -.18<7765>-.27 G<72>.18 E -4.554<636f72206e6572>108 192 R 10.008
<2e54>-.9 G<686573652062>-10.008 E<7574746f6e206172653a>-.36 E 25.488
<3c74>144 218 S<6f70206f6620707265>-25.488 E<76696f75732070616765>-.54 E
25.488<3e74>144 244 S<6f70206f66206e65>-25.488 E<78742070616765>-.54 E
27<6363>144 270 S<6f6e74656e74732070616765>-27 E 108 529.28 EBEGIN
%%%%BEGINBOT
EEND .4 LW 113 529.28 108 529.28 DL 115 529.28 110 529.28 DL 120 529.28
115 529.28 DL 125 529.28 120 529.28 DL 130 529.28 125 529.28 DL 135
529.28 130 529.28 DL 140 529.28 135 529.28 DL 145 529.28 140 529.28 DL
150 529.28 145 529.28 DL 155 529.28 150 529.28 DL 160 529.28 155 529.28
DL 165 529.28 160 529.28 DL 170 529.28 165 529.28 DL 175 529.28 170
529.28 DL 180 529.28 175 529.28 DL 185 529.28 180 529.28 DL 190 529.28
185 529.28 DL 195 529.28 190 529.28 DL 200 529.28 195 529.28 DL 205
529.28 200 529.28 DL 210 529.28 205 529.28 DL 215 529.28 210 529.28 DL
220 529.28 215 529.28 DL 225 529.28 220 529.28 DL 230 529.28 225 529.28
DL 235 529.28 230 529.28 DL 240 529.28 235 529.28 DL 245 529.28 240
529.28 DL 250 529.28 245 529.28 DL 255 529.28 250 529.28 DL 260 529.28
255 529.28 DL 265 529.28 260 529.28 DL 270 529.28 265 529.28 DL 275
529.28 270 529.28 DL 280 529.28 275 529.28 DL 285 529.28 280 529.28 DL
290 529.28 285 529.28 DL 295 529.28 290 529.28 DL 300 529.28 295 529.28
DL 305 529.28 300 529.28 DL 310 529.28 305 529.28 DL 315 529.28 310
529.28 DL 320 529.28 315 529.28 DL 325 529.28 320 529.28 DL 330 529.28
325 529.28 DL 335 529.28 330 529.28 DL 340 529.28 335 529.28 DL 345
529.28 340 529.28 DL 350 529.28 345 529.28 DL 355 529.28 350 529.28 DL
360 529.28 355 529.28 DL 365 529.28 360 529.28 DL 370 529.28 365 529.28
DL 375 529.28 370 529.28 DL 380 529.28 375 529.28 DL 385 529.28 380
529.28 DL 390 529.28 385 529.28 DL 395 529.28 390 529.28 DL 400 529.28
395 529.28 DL 405 529.28 400 529.28 DL 410 529.28 405 529.28 DL 415
529.28 410 529.28 DL 420 529.28 415 529.28 DL 425 529.28 420 529.28 DL
430 529.28 425 529.28 DL 435 529.28 430 529.28 DL 440 529.28 435 529.28
DL 445 529.28 440 529.28 DL 450 529.28 445 529.28 DL 455 529.28 450
529.28 DL 460 529.28 455 529.28 DL 465 529.28 460 529.28 DL 470 529.28
465 529.28 DL 475 529.28 470 529.28 DL 480 529.28 475 529.28 DL 485
529.28 480 529.28 DL 490 529.28 485 529.28 DL 495 529.28 490 529.28 DL
500 529.28 495 529.28 DL 505 529.28 500 529.28 DL 510 529.28 505 529.28
DL 515 529.28 510 529.28 DL 520 529.28 515 529.28 DL 525 529.28 520
529.28 DL 530 529.28 525 529.28 DL 535 529.28 530 529.28 DL 540 529.28
535 529.28 DL 545 529.28 540 529.28 DL 550 529.28 545 529.28 DL 555
529.28 550 529.28 DL 560 529.28 555 529.28 DL 565 529.28 560 529.28 DL
570 529.28 565 529.28 DL 575 529.28 570 529.28 DL 580 529.28 575 529.28
DL 585 529.28 580 529.28 DL 590 529.28 585 529.28 DL 595 529.28 590
529.28 DL 600 529.28 595 529.28 DL 605 529.28 600 529.28 DL 610 529.28
605 529.28 DL 615 529.28 610 529.28 DL 620 529.28 615 529.28 DL 625
529.28 620 529.28 DL 630 529.28 625 529.28 DL 635 529.28 630 529.28 DL
640 529.28 635 529.28 DL 645 529.28 640 529.28 DL 650 529.28 645 529.28
DL 655 529.28 650 529.28 DL 660 529.28 655 529.28 DL 665 529.28 660
529.28 DL 670 529.28 665 529.28 DL 675 529.28 670 529.28 DL 680 529.28
675 529.28 DL 685 529.28 680 529.28 DL 690 529.28 685 529.28 DL 695
529.28 690 529.28 DL 700 529.28 695 529.28 DL 705 529.28 700 529.28 DL
710 529.28 705 529.28 DL 715 529.28 710 529.28 DL 720 529.28 715 529.28
DL/F0 10/Helvetica@0 SF<3234>708.88 541.28 Q 0 Cg EP
%%Page: 25 25
%%BeginPageSetup
BP
%%EndPageSetup
108 31.2 EBEGIN
%%%%ENDTOP
EEND 108 36 EBEGIN
%%%%CONTENTS
EEND 0 0 0 Cr/F0 10/Helvetica@0 SF<434f4e54454e5453>386.5 48 Q 0 0 0.7
Cr<546865206d616b696e67206f6620746869732064656d6f>108 108 Q 7.22<2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2031>227.92 108 R 393.6 108 EBEGIN
%%%%LINK 106000 99000 289600 12000 1
EEND/F0 10/Helvetica@0 SF<48656164657273>108 120 Q 7.22<2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e20
32>158.42 120 R 393.6 120 EBEGIN
%%%%LINK 106000 111000 289600 12000 2
EEND/F0 10/Helvetica@0 SF -.3<466f>108 132 S<6f74657273>.3 E 7.22<2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2033>152.86 132 R 393.6 132 EBEGIN
%%%%LINK 106000 123000 289600 12000 3
EEND/F0 10/Helvetica@0 SF<5469746c6573>108 144 Q 7.22<2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2034>144.52 144 R 393.6 144 EBEGIN
%%%%LINK 106000 135000 289600 12000 4
EEND/F0 10/Helvetica@0 SF -.4<5061>108 156 S<7573696e67>.4 E 7.22<2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2035>155.64 156 R 393.6 156 EBEGIN
%%%%LINK 106000 147000 289600 12000 5
EEND/F0 10/Helvetica@0 SF -.4<5061>108 168 S<7573696e672028636f6e742e29>
.4 E 7.22<2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2036>186.22 168 R 393.6 168 EBEGIN
%%%%LINK 106000 159000 289600 12000 6
EEND/F0 10/Helvetica@0 SF -.4<5061>108 180 S<7573696e672028636f6e742e29>
.4 E 7.22<2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2037>186.22 180 R 393.6 180 EBEGIN
%%%%LINK 106000 171000 289600 12000 7
EEND/F0 10/Helvetica@0 SF -.4<5061>108 192 S<7573696e672028636f6e742e29>
.4 E 7.22<2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2039>186.22 192 R 393.6 192 EBEGIN
%%%%LINK 106000 183000 289600 12000 9
EEND/F0 10/Helvetica@0 SF<436f6c6f7273>108 204 Q 7.22<2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
203130>147.3 204 R 393.6 204 EBEGIN
%%%%LINK 106000 195000 289600 12000 10
EEND/F0 10/Helvetica@0 SF<436f6c6f72732028636f6e742e29>108 216 Q 7.22<2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e203131>
180.66 216 R 393.6 216 EBEGIN
%%%%LINK 106000 207000 289600 12000 11
EEND/F0 10/Helvetica@0 SF<50726564658c6e656420436f6c6f7273>108 228 Q
7.22<2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e203132>200.12
228 R 393.6 228 EBEGIN
%%%%LINK 106000 219000 289600 12000 12
EEND/F0 10/Helvetica@0 SF<426163>108 240 Q<6b67>-.2 E<726f756e6473>-.1 E
7.22<2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e203133>177.88 240 R 393.6 240 EBEGIN
%%%%LINK 106000 231000 289600 12000 13
EEND/F0 10/Helvetica@0 SF<426163>108 252 Q<6b67>-.2 E
<726f756e64732028636f6e742e29>-.1 E 7.22<2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e203134>208.46 252 R 393.6 252 EBEGIN
%%%%LINK 106000 243000 289600 12000 14
EEND/F0 10/Helvetica@0 SF<426163>108 264 Q<6b67>-.2 E
<726f756e64732028636f6e742e29>-.1 E 7.22<2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e203135>208.46 264 R 393.6 264 EBEGIN
%%%%LINK 106000 255000 289600 12000 15
EEND/F0 10/Helvetica@0 SF<426163>108 276 Q<6b67>-.2 E
<726f756e64732028636f6e742e29>-.1 E 7.22<2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e203136>208.46 276 R 393.6 276 EBEGIN
%%%%LINK 106000 267000 289600 12000 16
EEND/F0 10/Helvetica@0 SF<426163>108 288 Q<6b67>-.2 E
<726f756e64732028636f6e742e29>-.1 E 7.22<2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e203137>208.46 288 R 393.6 288 EBEGIN
%%%%LINK 106000 279000 289600 12000 17
EEND/F0 10/Helvetica@0 SF<46696c6c65642052656374616e676c6573>108 300 Q
7.22<2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e203138>
197.34 300 R 393.6 300 EBEGIN
%%%%LINK 106000 291000 289600 12000 18
EEND/F0 10/Helvetica@0 SF<426c6f63>108 312 Q<6b73>-.2 E 7.22<2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e203139>147.3 312 R 393.6 312 EBEGIN
%%%%LINK 106000 303000 289600 12000 19
EEND/F0 10/Helvetica@0 SF<426c6f63>108 324 Q<6b732028636f6e742e29>-.2 E
7.22<2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
203230>180.66 324 R 393.6 324 EBEGIN
%%%%LINK 106000 315000 289600 12000 20
EEND/F0 10/Helvetica@0 SF<4c696e6b73>108 336 Q 7.22<2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e203231>141.74 336 R 393.6 336 EBEGIN
%%%%LINK 106000 327000 289600 12000 21
EEND/F0 10/Helvetica@0 SF<4c696e6b732028636f6e742e29>108 348 Q 7.22<2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e203232>
175.1 348 R 393.6 348 EBEGIN
%%%%LINK 106000 339000 289600 12000 22
EEND/F0 10/Helvetica@0 SF<436f6e74656e7473>108 360 Q 7.22<2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2032
33>158.42 360 R 393.6 360 EBEGIN
%%%%LINK 106000 351000 289600 12000 23
EEND/F0 10/Helvetica@0 SF
<5468697320697320616464656420746f2074686520636f6e74656e7473>108 372 Q
7.22<2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e203233>247.38 372 R 393.6 372 EBEGIN
%%%%LINK 106000 363000 289600 12000 23
EEND/F0 10/Helvetica@0 SF<42726f>108 384 Q<777365>-.15 E 7.22<2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e203234>152.86 384 R 393.6 384 EBEGIN
%%%%LINK 106000 375000 289600 12000 24
EEND 108 521.28 EBEGIN
%%%%BEGINBOT
EEND 0 Cg EP
%%Trailer
end
%%EOF
